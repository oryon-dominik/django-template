[tool.poetry]
name = "{{ project_name }}"
version = "0.0.1"
description = ""
authors = ["oryon-dominik <oryon@cyberise.de>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
gunicorn = "^20.1.0"
Django = "^4.1.1"
django-environ = "^0.9.0"
django-cors-headers = "^3.13.0"
django-extensions = "^3.2.1"
django-rich = "^1.4.0"
django-stubs = {extras = ["compatible-mypy"], version = "^1.15.0"}
django-stubs-ext = "^0.7.0"
msgspec = "^0.13.1"

[tool.poetry.group.django]
optional = false
[tool.poetry.group.django.dependencies]
django-readers = "^2.1.1"
django-hatchway = "^0.5.1"
django-widget-tweaks = "^1.4.12"
django-crispy-forms = "^1.14.0"
crispy-tailwind = "^0.5.0"

[tool.poetry.group.cli]
optional = false
[tool.poetry.group.cli.dependencies]
typer = "^0.6.1"

[tool.poetry.group.test]
optional = false
[tool.poetry.group.test.dependencies]
coverage = "^6.4.4"
pytest = "^7.1.3"
pytest-django = "^4.5.2"
pytest-rich = "^0.1.1"
faker = "^16.6.0"
freezegun = "^1.2.2"

[tool.poetry.group.commithooks]
optional = false
[tool.poetry.group.commithooks.dependencies]
djhtml = "^1.5.2"
pre-commit = "^2.20.0"

[tool.poetry.group.linter]
optional = false
# run ruff with: poetry run ruff check .
# run flake8 with: poetry run flake8
[tool.poetry.group.linter.dependencies]
ruff = "^0.0.260"
flake8-pyproject = "^1.2.3"

[tool.poetry.group.formatter]
optional = false
# run black with: poetry run black check .
# run isort with: poetry run isort .
[tool.poetry.group.formatter.dependencies]
black = {extras = ["jupyter"], version = "^23.3.0"}
isort = "^5.12.0"

[tool.poetry.group.typechecker]
optional = false
# run mypy with: poetry run mypy --config-file pyproject.toml .
[tool.poetry.group.typechecker.dependencies]
mypy = "1.0.1"
types-toml = "^0.10.8.6"

[tool.poetry.group.debugging]
optional = false
[tool.poetry.group.debugging.dependencies]
jupyter = "^1.0.0"
django-debug-toolbar = "^3.6.0"

[tool.poetry.group.paragons]
optional = false
[tool.poetry.group.paragons.dependencies]
rich = "^12.5.1"
humanize = "^4.3.0"
pendulum = "^2.1.2"
dill = "^0.3.5.1"
passlib = "^1.7.4"
httpx = "^0.23.0"  # also used in some jupyter dev-notebooks

[tool.poetry.group.postgres]
optional = true
[tool.poetry.group.postgres.dependencies]
psycopg2 = "^2.9.3"

[tool.poetry.group.authentication]
optional = true
[tool.poetry.group.authentication.dependencies]
python-jose = {extras = ["cryptography"], version = "^3.3.0"}

[tool.poetry.group.restframework]
optional = true
[tool.poetry.group.restframework.dependencies]
djangorestframework = "^3.13.1"
djangorestframework-stubs = {extras = ["compatible-mypy"], version = "^1.9.1"}

[tool.poetry.group.vite]
optional = true
[tool.poetry.group.vite.dependencies]
django-vite = "^2.0.2"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.test"
addopts = "-p no:warnings"
python_files = "tests.py test_*.py *_tests.py"
norecursedirs = ".git staticfiles docs assets logs media notebooks"

[tool.coverage.run]
branch = true
source = ["apps"]
omit = ["apps/*/tests/*", "apps/*/migrations/*"]
command_line = "-m pytest"

[tool.ruff]
line-length = 199

[tool.black]
line-length = 119
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | build
    | dist
    | pyproject.toml
  )/
)
'''

[tool.isort]
profile = "black"
line_length=119
multi_line_output = 3
include_trailing_comma = true
split_on_trailing_comma = true  # black compatible
no_inline_sort = true
no_lines_before = ["future", "stdlib"]
combine_star = true
lines_between_types = 0
lines_after_imports = 2
lines_between_sections = 1
skip = [
  '.eggs',
  '.git',
  '.mypy_cache',
  '.venv',
  '_build',
  'build',
  'dist',
  'node_modules',
  'venv'
]
skip_glob = [
  "*/node_modules/*",
  "*/config/settings/*.py",
]
extend_skip = [".md", ".json"]
default_section = "THIRDPARTY"
known_first_party = ["config", "core", "test", "apps"]
src_paths = ["config", "core", "test", "apps", "manage.py"]
known_django = "django"
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'DJANGO', 'FIRSTPARTY', 'LOCALFOLDER']

[tool.flake8]
statistics = "True"
extend-ignore = [
  "E203",  # whitespace before ':' - for black compatibility
]
per-file-ignores = [
  "config/settings/base/__init__.py:F401",
  "config/settings/base/thirdparty/__init__.py:F401",
  "config/settings/base/{{ project_name }}/__init__.py:F401",
  "config/settings/develop.py:F405",
  "config/settings/production.py:F405",
  "config/settings/test.py:F405",
]
exclude = '''
    **/migrations/*,
    .git,
    '''
max-line-length = 199

[tool.mypy]
ignore_missing_imports = true
warn_unused_ignores = false
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[tool.django-stubs]
django_settings_module = "config.settings.develop"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[template]
repository = "https://github.com/oryon-dominik/django-template"
templateused = "project_template_cli"
