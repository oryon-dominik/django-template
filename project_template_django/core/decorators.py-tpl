import functools

from core.typehints.generic import DjangoMode


def djangosetup(x_or_func=None, mode: DjangoMode | None = None):
    """
    Setup django settings for the function ahead.
    """
    assert callable(x_or_func) or x_or_func is None

    def _decorator(func):
        @functools.wraps(func)
        def wrapper(*args, **kwargs):
            from .setup import setup_django_settings

            _mode = "develop" if mode is None else mode

            setup_django_settings(mode=_mode)
            result = func(*args, **kwargs)

            return result

        return wrapper

    return _decorator(x_or_func) if callable(x_or_func) else _decorator
